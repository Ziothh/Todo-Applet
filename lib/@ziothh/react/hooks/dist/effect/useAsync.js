import { useCallback, useEffect, useState } from "react";
const useAsync = (callback, dependencies = []) => {
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState();
    const [data, setData] = useState();
    const callbackMemoized = useCallback(() => {
        setLoading(true);
        setError(undefined);
        setData(undefined);
        callback()
            .then(setData)
            .catch(setError)
            .finally(() => setLoading(false));
    }, dependencies);
    useEffect(() => {
        callbackMemoized();
    }, [callbackMemoized]);
    return { loading, error, data };
};
export default useAsync;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlQXN5bmMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZWZmZWN0L3VzZUFzeW5jLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLE9BQU8sQ0FBQTtBQUd4RCxNQUFNLFFBQVEsR0FBRyxDQUNiLFFBQXdDLEVBQ3hDLGVBQStCLEVBQUUsRUFDbkMsRUFBRTtJQUNBLE1BQU0sQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQzVDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLEdBQUcsUUFBUSxFQUFhLENBQUE7SUFDL0MsTUFBTSxDQUFDLElBQUksRUFBRSxPQUFPLENBQUMsR0FBRyxRQUFRLEVBQW1CLENBQUE7SUFFbkQsTUFBTSxnQkFBZ0IsR0FBRyxXQUFXLENBQUMsR0FBRyxFQUFFO1FBQ3RDLFVBQVUsQ0FBQyxJQUFJLENBQUMsQ0FBQTtRQUNoQixRQUFRLENBQUMsU0FBUyxDQUFDLENBQUE7UUFDbkIsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFBO1FBRWxCLFFBQVEsRUFBRTthQUNULElBQUksQ0FBQyxPQUFPLENBQUM7YUFDYixLQUFLLENBQUMsUUFBUSxDQUFDO2FBQ2YsT0FBTyxDQUFDLEdBQUcsRUFBRSxDQUFDLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFBO0lBRXJDLENBQUMsRUFBRSxZQUFZLENBQUMsQ0FBQTtJQUVoQixTQUFTLENBQUMsR0FBRyxFQUFFO1FBQ1gsZ0JBQWdCLEVBQUUsQ0FBQTtJQUN0QixDQUFDLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUE7SUFFdEIsT0FBTyxFQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFDLENBQUE7QUFDakMsQ0FBQyxDQUFBO0FBRUQsZUFBZSxRQUFRLENBQUEifQ==